// Vari√°vel global para o Firebase
let db;

// Inicializa√ß√£o quando o DOM estiver carregado
document.addEventListener('DOMContentLoaded', function() {
    // Inicializa o Firestore
    db = firebase.firestore();
    
    // Configura os eventos dos √≠cones
    document.querySelectorAll('.icone').forEach(icone => {
        icone.addEventListener('click', function() {
            const tipo = this.getAttribute('data-tipo');
            mostrarConteudo(tipo);
        });
    });

    // Configura o evento do bot√£o registrar treino (delegation)
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('btn-registro')) {
            registrarTreino();
        }
    });
});

let iconeAtivo = null;

// Dados do Plano de Calistenia
const planoCalistenia = {
  objetivo: "Ganhar massa magra (5kg+) e aumentar o b√≠ceps/bra√ßos",
  duracao: "8-12 semanas",
  dias: [
    {
      nome: "Dia 1: Push (Peito, Ombro, Tr√≠ceps)",
      exercicios: [
        "Flex√µes (Push-ups) ‚Äì 4x at√© a falha (p√©s elevados)",
        "Dips entre bancos ‚Äì 3x at√© a falha",
        "Flex√µes diamante ‚Äì 3x at√© a falha",
        "Pike Push-ups ‚Äì 3x at√© a falha",
        "Burpees ‚Äì 3x 10 repeti√ß√µes"
      ]
    },
    {
      nome: "Dia 2: Pull (Costas e B√≠ceps)",
      exercicios: [
        "Barra fixa (Pull-ups) ‚Äì 4x at√© a falha",
        "Australian Pull-ups ‚Äì 3x at√© a falha",
        "Isometria na barra ‚Äì 3x 20 segundos",
        "B√≠ceps com toalha ‚Äì 3x 12 reps",
        "Superman holds ‚Äì 3x 30 segundos"
      ]
    },
    {
      nome: "Dia 3: Pernas e Core",
      exercicios: [
        "Agachamentos pistola ‚Äì 4x 10 reps",
        "Avan√ßos (Lunges) ‚Äì 3x 12 reps por perna",
        "Eleva√ß√£o de panturrilha ‚Äì 4x 20 reps",
        "Prancha abdominal ‚Äì 3x 1 minuto",
        "Russian twists ‚Äì 3x 20 reps"
      ]
    },
    {
      nome: "Dia 4: Full Body + Intensidade",
      exercicios: [
        "Burpees + Flex√£o ‚Äì 4x 10 reps",
        "Pull-ups ‚Äì 3x at√© a falha",
        "Agachamento + Salto ‚Äì 3x 15 reps",
        "Dips ‚Äì 3x at√© a falha",
        "Abdominal remador ‚Äì 3x 12 reps"
      ]
    }
  ],
  dicas: [
    "Adicione peso: Use mochila com livros ou garrafas d'√°gua",
    "Aumente repeti√ß√µes: Sempre busque falhar na √∫ltima s√©rie",
    "Diminua descanso: 45s a 1 minuto entre s√©ries",
    "Fa√ßa varia√ß√µes mais dif√≠ceis: Ex: Flex√£o com 1 bra√ßo"
  ],
  nutricao: [
    "P√≥s-treino: Whey ou vitamina de banana + aveia + leite + pasta de amendoim",
    "Janta refor√ßada: Ovos + carboidrato (batata-doce, arroz) + vegetais"
  ]
};

function mostrarConteudo(tipo) {
    const conteudoDinamico = document.getElementById('conteudo-dinamico');

    switch (tipo) {
        case 'progresso':
            conteudoDinamico.innerHTML = `
                <div class="plano-container">
                    <h2>üìÖ Plano de Calistenia</h2>
                    <div class="meta-box">
                        <p><strong>Objetivo:</strong> ${planoCalistenia.objetivo}</p>
                        <p><strong>Dura√ß√£o:</strong> ${planoCalistenia.duracao}</p>
                    </div>
                    
                    <div class="dias-container">
                        ${planoCalistenia.dias.map(dia => `
                            <div class="dia-box">
                                <h3>${dia.nome}</h3>
                                <ul>
                                    ${dia.exercicios.map(ex => `<li>${ex}</li>`).join('')}
                                </ul>
                            </div>
                        `).join('')}
                    </div>
                    
                    <div class="dicas-box">
                        <h3>üí° Dicas para Progress√£o</h3>
                        <ul>
                            ${planoCalistenia.dicas.map(dica => `<li>${dica}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="nutricao-box">
                        <h3>üçó Alimenta√ß√£o Recomendada</h3>
                        <ul>
                            ${planoCalistenia.nutricao.map(item => `<li>${item}</li>`).join('')}
                        </ul>
                    </div>
                    
                    <div class="progresso-box">
                        <h3>üìä Seu Progresso</h3>
                        <div class="grafico-placeholder">
                            <!-- Espa√ßo para gr√°ficos futuros -->
                            <p>Seu progresso ser√° exibido aqui</p>
                        </div>
<button class="btn-registro">
<div class="icone" data-tipo="progresso">

                            ‚úÖ Registrar Treino de Hoje
                        </button>
                    </div>
                </div>
            `;
            break;
            
        case 'aulas':
            conteudoDinamico.innerHTML = `
                <h2>Aulas</h2>
                <p>Agenda de aulas dispon√≠veis...</p>
            `;
            break;
            
        case 'sobre':
            conteudoDinamico.innerHTML = `
                <h2>Sobre a Academia</h2>
                <p>Descri√ß√£o da academia...</p>
            `;
            break;
            
        case 'contato':
            conteudoDinamico.innerHTML = `
                <h2>Contato</h2>
                <p>Formul√°rio de contato...</p>
            `;
            break;
            
        case 'usuario':
            const loggedInUser = localStorage.getItem('loggedInUser');
            conteudoDinamico.innerHTML = `
                <h2>√Årea do Usu√°rio</h2>
                <p>Bem-vindo, ${loggedInUser}!</p>
                <p>Informa√ß√µes pessoais e pr√≥ximas aulas...</p>
            `;
            break;
            
        default:
            conteudoDinamico.innerHTML = `
                <h2>Bem-vindo ao SistemForGym</h2>
                <p>Criado para auxiliar seu corpo com dicas de treinos e dietas.</p>
            `;
    }
    
    // Atualiza o √≠cone ativo
    if (iconeAtivo) {
        iconeAtivo.classList.remove('ativo');
    }
    iconeAtivo = document.querySelector(`.icone[onclick="mostrarConteudo('${tipo}')"]`);
    iconeAtivo.classList.add('ativo');
}
function registrarTreino() {
    const hoje = new Date().toLocaleDateString();
    
    if (db) {
        const user = firebase.auth().currentUser;
        if (user) {
            db.collection("treinos").add({
                userId: user.uid,
                data: new Date(),
                tipo: "Calistenia",
                concluido: true
            })
            .then(() => {
                alert(`Treino do dia ${hoje} registrado com sucesso!`);
            })
            .catch(error => {
                console.error("Erro ao registrar treino: ", error);
                alert("Erro ao registrar treino. Consulte o console.");
            });
        } else {
            alert("Voc√™ precisa estar logado para registrar treinos!");
        }
    } else {
        alert("Banco de dados n√£o inicializado!");
    }
}
// Torna as fun√ß√µes dispon√≠veis globalmente
window.mostrarConteudo = mostrarConteudo;
window.registrarTreino = registrarTreino;
